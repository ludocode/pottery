/*
 * MIT License
 *
 * Copyright (c) 2020-2021 11037650 Canada Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#ifndef POTTERY_PRIORITY_QUEUE_IMPL
#error "This is header internal to Pottery. Do not include it."
#endif

#include "pottery/pottery_dependencies.h"

#define POTTERY_HEAP_PREFIX POTTERY_CONCAT(POTTERY_PRIORITY_QUEUE_PREFIX, _heap)

// Forward value type only. The context is our internal array.
#define POTTERY_HEAP_VALUE_TYPE POTTERY_PRIORITY_QUEUE_VALUE_TYPE
#define POTTERY_HEAP_CONTEXT_TYPE pottery_pq_array_t*

// Array access functions wrap our internal array
#define POTTERY_HEAP_ARRAY_ACCESS_BEGIN pottery_pq_array_begin
#define POTTERY_HEAP_ARRAY_ACCESS_END pottery_pq_array_end
#define POTTERY_HEAP_ARRAY_ACCESS_COUNT pottery_pq_array_count
#define POTTERY_HEAP_ARRAY_ACCESS_SELECT pottery_pq_array_select
#define POTTERY_HEAP_ARRAY_ACCESS_INDEX pottery_pq_array_index
#define POTTERY_HEAP_ARRAY_ACCESS_SHIFT pottery_pq_array_shift
#define POTTERY_HEAP_ARRAY_ACCESS_OFFSET pottery_pq_array_offset
#define POTTERY_HEAP_ARRAY_ACCESS_NEXT pottery_pq_array_next
#define POTTERY_HEAP_ARRAY_ACCESS_PREVIOUS pottery_pq_array_previous
#define POTTERY_HEAP_ARRAY_ACCESS_EXISTS pottery_pq_array_entry_exists

// Lifecycle configuration must be remapped to use the proper context. We only
// care about move and swap right now.
#if defined(POTTERY_PRIORITY_QUEUE_LIFECYCLE_MOVE) || \
        defined(POTTERY_PRIORITY_QUEUE_LIFECYCLE_MOVE_BY_VALUE) || \
        defined(POTTERY_PRIORITY_QUEUE_LIFECYCLE_BY_VALUE)
    #define POTTERY_HEAP_LIFECYCLE_MOVE(array, a, b) \
            pottery_pq_lifecycle_move_restrict(POTTERY_PRIORITY_QUEUE_CONTEXT_VAL(array) a, b)
#endif
#define POTTERY_HEAP_LIFECYCLE_SWAP(array, a, b) \
        pottery_pq_lifecycle_swap_restrict(POTTERY_PRIORITY_QUEUE_CONTEXT_VAL(array) a, b)

// Compare configuration must be remapped to use the proper context
#define POTTERY_HEAP_COMPARE_EQUAL(array, a, b) \
        pottery_pq_compare_equal(POTTERY_PRIORITY_QUEUE_CONTEXT_VAL(array) a, b)
#define POTTERY_HEAP_COMPARE_LESS(array, a, b) \
        pottery_pq_compare_less(POTTERY_PRIORITY_QUEUE_CONTEXT_VAL(array) a, b)
#ifdef POTTERY_PRIORITY_QUEUE_COMPARE_THREE_WAY
    #define POTTERY_HEAP_COMPARE_THREE_WAY(array, a, b) \
            pottery_pq_compare_three_way(POTTERY_PRIORITY_QUEUE_CONTEXT_VAL(array) a, b)
#endif

// Set index must be remapped to use the proper context
#ifdef POTTERY_PRIORITY_QUEUE_SET_INDEX
    #if POTTERY_PRIORITY_QUEUE_HAS_CONTEXT
        #define POTTERY_HEAP_SET_INDEX(array, entry, index) \
            POTTERY_PRIORITY_QUEUE_SET_INDEX(array->context, entry, index)
    #else
        #define POTTERY_HEAP_SET_INDEX(array, entry, index) \
            POTTERY_PRIORITY_QUEUE_SET_INDEX(entry, index)
    #endif
#endif



#if 0
// Forward compare configuration
//!!! AUTOGENERATED:compare/forward.m.h SRC:POTTERY_PRIORITY_QUEUE_COMPARE DEST:POTTERY_HEAP_COMPARE
    // This block is auto-generated. Do not modify until END_AUTOGENERATED.
    // Forwards compare configuration from POTTERY_PRIORITY_QUEUE_COMPARE to POTTERY_HEAP_COMPARE

    #ifdef POTTERY_PRIORITY_QUEUE_COMPARE_BY_VALUE
        #define POTTERY_HEAP_COMPARE_BY_VALUE POTTERY_PRIORITY_QUEUE_COMPARE_BY_VALUE
    #endif

    #ifdef POTTERY_PRIORITY_QUEUE_COMPARE_EQUAL
        #define POTTERY_HEAP_COMPARE_EQUAL POTTERY_PRIORITY_QUEUE_COMPARE_EQUAL
    #endif
    #ifdef POTTERY_PRIORITY_QUEUE_COMPARE_NOT_EQUAL
        #define POTTERY_HEAP_COMPARE_NOT_EQUAL POTTERY_PRIORITY_QUEUE_COMPARE_NOT_EQUAL
    #endif
    #ifdef POTTERY_PRIORITY_QUEUE_COMPARE_LESS
        #define POTTERY_HEAP_COMPARE_LESS POTTERY_PRIORITY_QUEUE_COMPARE_LESS
    #endif
    #ifdef POTTERY_PRIORITY_QUEUE_COMPARE_LESS_OR_EQUAL
        #define POTTERY_HEAP_COMPARE_LESS_OR_EQUAL POTTERY_PRIORITY_QUEUE_COMPARE_LESS_OR_EQUAL
    #endif
    #ifdef POTTERY_PRIORITY_QUEUE_COMPARE_GREATER
        #define POTTERY_HEAP_COMPARE_GREATER POTTERY_PRIORITY_QUEUE_COMPARE_GREATER
    #endif
    #ifdef POTTERY_PRIORITY_QUEUE_COMPARE_GREATER_OR_EQUAL
        #define POTTERY_HEAP_COMPARE_GREATER_OR_EQUAL POTTERY_PRIORITY_QUEUE_COMPARE_GREATER_OR_EQUAL
    #endif
    #ifdef POTTERY_PRIORITY_QUEUE_COMPARE_THREE_WAY
        #define POTTERY_HEAP_COMPARE_THREE_WAY POTTERY_PRIORITY_QUEUE_COMPARE_THREE_WAY
    #endif
//!!! END_AUTOGENERATED



// Forward lifecycle configuration
//!!! AUTOGENERATED:lifecycle/forward.m.h SRC:POTTERY_PRIORITY_QUEUE_LIFECYCLE DEST:POTTERY_HEAP_LIFECYCLE
    // This block is auto-generated. Do not modify until END_AUTOGENERATED.

    // Forwards lifecycle configuration from POTTERY_PRIORITY_QUEUE_LIFECYCLE to POTTERY_HEAP_LIFECYCLE

    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_BY_VALUE
        #define POTTERY_HEAP_LIFECYCLE_BY_VALUE POTTERY_PRIORITY_QUEUE_LIFECYCLE_BY_VALUE
    #endif

    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_DESTROY
        #define POTTERY_HEAP_LIFECYCLE_DESTROY POTTERY_PRIORITY_QUEUE_LIFECYCLE_DESTROY
    #endif
    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_DESTROY_BY_VALUE
        #define POTTERY_HEAP_LIFECYCLE_DESTROY_BY_VALUE POTTERY_PRIORITY_QUEUE_LIFECYCLE_DESTROY_BY_VALUE
    #endif

    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_INIT
        #define POTTERY_HEAP_LIFECYCLE_INIT POTTERY_PRIORITY_QUEUE_LIFECYCLE_INIT
    #endif
    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_INIT_BY_VALUE
        #define POTTERY_HEAP_LIFECYCLE_INIT_BY_VALUE POTTERY_PRIORITY_QUEUE_LIFECYCLE_INIT_BY_VALUE
    #endif

    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_INIT_COPY
        #define POTTERY_HEAP_LIFECYCLE_INIT_COPY POTTERY_PRIORITY_QUEUE_LIFECYCLE_INIT_COPY
    #endif
    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_INIT_COPY_BY_VALUE
        #define POTTERY_HEAP_LIFECYCLE_INIT_COPY_BY_VALUE POTTERY_PRIORITY_QUEUE_LIFECYCLE_INIT_COPY_BY_VALUE
    #endif

    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_INIT_STEAL
        #define POTTERY_HEAP_LIFECYCLE_INIT_STEAL POTTERY_PRIORITY_QUEUE_LIFECYCLE_INIT_STEAL
    #endif
    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_INIT_STEAL_BY_VALUE
        #define POTTERY_HEAP_LIFECYCLE_INIT_STEAL_BY_VALUE POTTERY_PRIORITY_QUEUE_LIFECYCLE_INIT_STEAL_BY_VALUE
    #endif

    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_MOVE
        #define POTTERY_HEAP_LIFECYCLE_MOVE POTTERY_PRIORITY_QUEUE_LIFECYCLE_MOVE
    #endif
    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_MOVE_BY_VALUE
        #define POTTERY_HEAP_LIFECYCLE_MOVE_BY_VALUE POTTERY_PRIORITY_QUEUE_LIFECYCLE_MOVE_BY_VALUE
    #endif

    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_COPY
        #define POTTERY_HEAP_LIFECYCLE_COPY POTTERY_PRIORITY_QUEUE_LIFECYCLE_COPY
    #endif
    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_COPY_BY_VALUE
        #define POTTERY_HEAP_LIFECYCLE_COPY_BY_VALUE POTTERY_PRIORITY_QUEUE_LIFECYCLE_COPY_BY_VALUE
    #endif

    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_STEAL
        #define POTTERY_HEAP_LIFECYCLE_STEAL POTTERY_PRIORITY_QUEUE_LIFECYCLE_STEAL
    #endif
    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_STEAL_BY_VALUE
        #define POTTERY_HEAP_LIFECYCLE_STEAL_BY_VALUE POTTERY_PRIORITY_QUEUE_LIFECYCLE_STEAL_BY_VALUE
    #endif

    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_SWAP
        #define POTTERY_HEAP_LIFECYCLE_SWAP POTTERY_PRIORITY_QUEUE_LIFECYCLE_SWAP
    #endif
    #ifdef POTTERY_PRIORITY_QUEUE_LIFECYCLE_SWAP_BY_VALUE
        #define POTTERY_HEAP_LIFECYCLE_SWAP_BY_VALUE POTTERY_PRIORITY_QUEUE_LIFECYCLE_SWAP_BY_VALUE
    #endif
//!!! END_AUTOGENERATED
#endif
